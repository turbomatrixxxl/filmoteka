{"mappings":"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","sources":["node_modules/node-fetch/browser.js","src/index.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","// SimpleLightbox import\n// Descris în documentație\n// import SimpleLightbox from 'simplelightbox';\n// // Import suplimentar de stil\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Axios import\n// import axios from 'axios';\n\n// Lodash import\n// var _ = require('lodash');\n\n// Fetch2 import for Api\nconst fetch = require('node-fetch');\n\n// function navigateTo(path) {\n//   // Add a new entry to the history and update the URL\n//   history.pushState(null, null, path);\n//   // Update the content dynamically based on the selected path\n//   updateContent('./index.html');\n// }\n\nwindow.addEventListener('keyup', event => {\n  if (event.key === 'Escape') {\n    if (modalWindow.classList.contains('is-hidden')) {\n      return;\n    } else {\n      modalWindow.classList.add('is-hidden');\n    }\n  }\n});\n\n// Local storage functions\nconst save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    const serializedState = localStorage.removeItem(key);\n    return serializedState === null\n      ? undefined\n      : JSON.stringify(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nfunction setTheme(theme) {\n  if (theme == 'dark') {\n    remove('current-theme');\n    save('current-theme', 'dark');\n    document.documentElement.style.setProperty('--white', '#8c8c8c');\n    document.documentElement.style.setProperty('--gray', '#fff');\n    document.documentElement.style.setProperty('--light-gray', '#fff');\n    document.documentElement.style.setProperty('--red', '#fff');\n    document.documentElement.style.setProperty('--footer-bg', '#545454');\n    document.documentElement.style.setProperty('--blue', '#b92f2c');\n\n    document.documentElement.style.setProperty('--black', '#fff');\n    // alert('dark');\n  }\n  if (theme == 'light') {\n    remove('current-theme');\n    save('current-theme', 'light');\n    document.documentElement.style.setProperty('--white', '#fff');\n    document.documentElement.style.setProperty('--gray', '#545454');\n    document.documentElement.style.setProperty('--light-gray', '#8c8c8c');\n    document.documentElement.style.setProperty('--red', '#ff6b08');\n    document.documentElement.style.setProperty('--footer-bg', '#f7f7f7');\n    document.documentElement.style.setProperty('--blue', 'rgb(16, 16, 211)');\n\n    document.documentElement.style.setProperty('--black', '#000');\n  }\n}\n\nlet toggle = document.querySelector('label#toggle');\n// console.log(toggle);\nlet toggleClass = toggle.getAttribute('class');\n// console.log(toggleClass);\n\nconst darkThemeButton = document.querySelector('.checkbox');\n\nvar issChecked = darkThemeButton.checked;\nconst curentTheme = load('current-theme');\n\nif (\n  curentTheme === undefined ||\n  issChecked == false ||\n  curentTheme.includes('light')\n) {\n  let toggleClass = toggle.getAttribute('class');\n\n  toggle.classList.remove('switched');\n  toggle.classList.add('toggle');\n  // console.log(toggleClass);\n  console.log(issChecked);\n\n  remove('current-theme');\n  save('current-theme', 'light');\n  setTheme('light');\n  issChecked = false;\n}\n\nif (curentTheme.includes('dark') || issChecked == true) {\n  toggle.classList.remove('toggle');\n  toggle.classList.add('switched');\n  // console.log(toggleClass);\n  console.log(issChecked);\n\n  remove('current-theme');\n  save('current-theme', 'dark');\n  setTheme('dark');\n  issChecked = true;\n}\n\nconsole.log(issChecked);\n\nconst body = document.body;\n\nconst libraryButton = document.querySelector('.header-library-button');\n\nconst headerBottomButtonsContainer = document.querySelector(\n  '.header-bottom-buttons-container'\n);\n\nconst headerWatchedButton = document.querySelector('.header-watched-button');\n\nconst headerClearWatchedButton = document.querySelector(\n  '.header-clear-watched-button'\n);\n\nconst headerQueuedButton = document.querySelector('.header-queue-button');\n\nconst headerClearQueuedButton = document.querySelector(\n  '.header-clear-queue-button'\n);\n\nconst headerInput = document.querySelector('.search-form-input');\n// console.log(headerInput);\n\nlet searchText = null;\n\n// const paginationContainer = document.querySelector('.pagination');\n\n// searchText = headerInput.value.replace(/ /g, '%20');\n// console.log(searchText);\n\nconst headerSearchBtn = document.querySelector('.search-form-button');\n// console.log(headerSearchBtn);\n\nconst headerFormErrorMessage = document.querySelector('.header__error');\n\nconst heroList = document.querySelector('.gallery');\n\nconst apiKey = '90080ff184cabebdf1b42eaa88fb5738';\n\nconst noImageUrl =\n  'https://lascrucesfilmfest.com/wp-content/uploads/2018/01/no-poster-available.jpg';\n\nconst trendingMoviesUrl = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&page=${currentPage}`;\n\nconst genresApiUrl = `https://api.themoviedb.org/3/genre/movie/list?language=en&page=${currentPage}`;\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MDA4MGZmMTg0Y2FiZWJkZjFiNDJlYWE4OGZiNTczOCIsInN1YiI6IjY2NjAyNTUwN2MwMjgyZWYzMDRmNjAxOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-GiosJEhvb8JZPRVsDWYKnyMuBuXM_jJXaHMa3NkslY',\n  },\n};\n\n// modal const\nconst modalWindow = document.querySelector('.modal-window');\nconsole.log(modalWindow);\nconst modalImage = document.querySelector('.modal-img');\n// console.log(modalImage.getAttribute('src'));\nconst modalTitle = document.querySelector('.modal-title');\nconst modalVote = document.querySelector('.modal-vote');\nconst modalVotes = document.querySelector('.modal-votes');\nconst modalPopularity = document.querySelector('.modal-popularity-result');\nconst modalOrigTitle = document.querySelector('.modal-original-title-result');\nconst modalGenre = document.querySelector('.modal-genre-result');\nconst modalDescription = document.querySelector('.modal-movie-description');\nconst modalCloseBtn = document.querySelector('.modal-close-button');\nmodalCloseBtn.addEventListener('click', () => {\n  modalWindow.classList.toggle('is-hidden');\n});\n\nfunction isHidden(params) {\n  params.classList.add('is-hidden');\n}\n\nfunction remHidden(params) {\n  params.classList.remove('is-hidden');\n}\n\nfunction addRemButtons(params, id, addBtn, remBtn) {\n  let status = load(`${params}`);\n  if (status === undefined) {\n    isHidden(remBtn);\n    remHidden(addBtn);\n  } else {\n    // console.log(status);\n    if (status.includes(id)) {\n      isHidden(addBtn);\n      remHidden(remBtn);\n    } else {\n      isHidden(remBtn);\n      remHidden(addBtn);\n    }\n  }\n}\n\n// Watch buttons\n// remove('watched');\n// remove('queued');\nconst modalAddToWatchBtn = document.querySelector('.modal-add-to-watched-btn');\nconst modalRemFromWatchBtn = document.querySelector('.remove-from-watched');\n\nisHidden(modalRemFromWatchBtn);\n\nmodalAddToWatchBtn.addEventListener('click', ev => {\n  let id = modalImage.getAttribute('id');\n  // console.log(id);\n\n  let watched = load('watched');\n  // console.log(watched);\n\n  if (watched === undefined || watched.length === 0) {\n    save('watched', [id]);\n  } else {\n    const tru = watched.includes(id);\n\n    if (!tru) {\n      watched.push(id);\n      save('watched', watched);\n      // console.log('it dont has');\n    } else {\n      console.log('it has');\n    }\n  }\n\n  isHidden(modalAddToWatchBtn);\n  remHidden(modalRemFromWatchBtn);\n});\n\nmodalRemFromWatchBtn.addEventListener('click', ev => {\n  let id = modalImage.getAttribute('id');\n  // console.log(id);\n\n  let watched = load('watched');\n  // console.log(watched);\n\n  let watchedd = watched.filter(x => x !== id);\n  // console.log(watchedd);\n\n  save('watched', watchedd);\n\n  isHidden(modalRemFromWatchBtn);\n  remHidden(modalAddToWatchBtn);\n});\n\n// Queue buttons\nconst modalAddToQueueBtn = document.querySelector('.modal-add-to-queue-btn');\nconst modalRemFromQueueBtn = document.querySelector('.remove-from-queue-btn');\n\nisHidden(modalRemFromQueueBtn);\n\nmodalAddToQueueBtn.addEventListener('click', ev => {\n  let id = modalImage.getAttribute('id');\n  console.log(id);\n\n  let queued = load('queued');\n  console.log(queued);\n\n  if (queued === undefined || queued.length === 0) {\n    save('queued', [id]);\n  } else {\n    const tru = queued.includes(id);\n\n    if (!tru) {\n      queued.push(id);\n      console.log(queued);\n      save('queued', queued);\n      console.log('it dont has');\n    } else {\n      console.log('it has');\n    }\n  }\n\n  isHidden(modalAddToQueueBtn);\n  remHidden(modalRemFromQueueBtn);\n});\n\nmodalRemFromQueueBtn.addEventListener('click', ev => {\n  let id = modalImage.getAttribute('id');\n  console.log(id);\n\n  let queued = load('queued');\n  console.log(queued);\n\n  let queuedd = queued.filter(x => x !== id);\n  console.log(queuedd);\n  save('queued', queuedd);\n\n  isHidden(modalRemFromQueueBtn);\n  remHidden(modalAddToQueueBtn);\n});\n\n// Header search form\n\nheaderSearchBtn.addEventListener('click', ev => {\n  ev.preventDefault();\n  if (!headerBottomButtonsContainer.classList.contains('is-hidden')) {\n    headerBottomButtonsContainer.classList.add('is-hidden');\n  }\n\n  paginationContainer.style.display = 'block';\n\n  headerSearchBtn.disabled = true;\n  // console.log(headerInput.value);\n\n  headerInput.addEventListener('change', ev => {\n    if (!headerBottomButtonsContainer.classList.contains('is-hidden')) {\n      headerBottomButtonsContainer.classList.add('is-hidden');\n    }\n    headerSearchBtn.disabled = false;\n    console.log('change');\n  });\n\n  headerInput.addEventListener('input', ev => {\n    if (!headerBottomButtonsContainer.classList.contains('is-hidden')) {\n      headerBottomButtonsContainer.classList.add('is-hidden');\n    }\n    if (headerInput.value.length === 0) {\n      headerFormErrorMessage.style.display = 'none';\n    }\n    return;\n  });\n\n  searchText = headerInput.value.replace(/ /g, '%20');\n  // console.log(searchText);\n\n  let findUrl = `https://api.themoviedb.org/3/search/movie?query=${searchText}&include_adult=true&language=en-US&page=${currentPage}`;\n  // console.log(findUrl);\n\n  heroList.innerHTML = null;\n\n  fetch(findUrl, options)\n    .then(res => res.json())\n    .then(res => {\n      // console.log(findUrl);\n      console.log(res);\n      console.log(res.results);\n      const movies = res.results;\n      if (movies.length === 0) {\n        headerFormErrorMessage.style.display = 'block';\n        console.log('not found');\n\n        fetch(trendingMoviesUrl, options)\n          .then(res => res.json())\n          .then(res => {\n            // console.log(res);\n            // console.log(res.results);\n            const movies = res.results;\n            movies.map(element => {\n              renderCards(element);\n            });\n\n            const heroImagesLink =\n              document.querySelectorAll('.hero-cards-link');\n            // console.log(heroImagesLink);\n\n            heroImagesLink.forEach(link => {\n              const linkImage = link.querySelector('.hero-cards-image');\n              // console.log(linkImage);\n\n              link.addEventListener('click', ev => {\n                ev.preventDefault();\n\n                // console.log(ev.target);\n                const currentLink = ev.currentTarget;\n                console.log(currentLink);\n\n                const linkSrc = currentLink.href;\n                // console.log(linkSrc);\n                modalImage.setAttribute('src', linkSrc);\n\n                const linkId = currentLink.getAttribute('id');\n                modalImage.setAttribute('id', linkId);\n\n                // add remove buttons\n                addRemButtons(\n                  'queued',\n                  linkId,\n                  modalAddToQueueBtn,\n                  modalRemFromQueueBtn\n                );\n\n                addRemButtons(\n                  'watched',\n                  linkId,\n                  modalAddToWatchBtn,\n                  modalRemFromWatchBtn\n                );\n\n                // add in link necesary attributes from api's\n                const linkTitle = currentLink.getAttribute('title');\n                // console.log(linkTitle);\n                modalTitle.textContent = linkTitle;\n\n                const linkVote = currentLink.getAttribute('vote');\n                // console.log(linkVote);\n                modalVote.textContent = linkVote;\n\n                const linkVotes = currentLink.getAttribute('votes');\n                // console.log(linkVotes);\n                modalVotes.textContent = linkVotes;\n\n                const linkPopurarity = currentLink.getAttribute('popularity');\n                // console.log(linkPopurarity);\n                modalPopularity.textContent = linkPopurarity;\n\n                const linkOrigTitle =\n                  currentLink.getAttribute('original_title');\n                // console.log(linkOrigTitle);\n                modalOrigTitle.textContent = linkOrigTitle;\n\n                const linkDescription = currentLink.getAttribute('description');\n                // console.log(linkDescription);\n                modalDescription.textContent = linkDescription;\n\n                const genres = currentLink.getAttribute('genres');\n                // console.log(genres);\n                modalGenre.textContent = genres;\n\n                modalWindow.classList.toggle('is-hidden');\n\n                // setting the modal window gallery using the SimpleLightbox library and adding \"alt\" caption title on bottom with 250 ms delay\n                // let gallery = new SimpleLightbox(`.gallery a`, {\n                //   captionsData: 'src',\n                //   captionDelay: 250,\n                //   captionPosition: 'outside',\n                //   alertError: false,\n                //   captionHTML: false,\n                // });\n                // console.dir(gallery);\n                // console.log(gallery.elements);\n                // console.log(gallery.options);\n              });\n            });\n\n            currentPage = 1;\n\n            paginationContainer.addEventListener('click', ev => {\n              // console.log(ev.currentTarget);\n              currentPage =\n                ev.currentTarget.querySelector('.active>span').textContent;\n              console.log(currentPage);\n              findUrl = `https://api.themoviedb.org/3/search/movie?query=${searchText}&include_adult=true&language=en-US&page=${currentPage}`;\n\n              heroList.innerHTML = null;\n              console.log(findUrl);\n\n              fetch(findUrl, options)\n                .then(res => res.json())\n                .then(res => {\n                  // console.log(findUrl);\n                  console.log(res.total_pages);\n\n                  if (res.total_pages < 20) {\n                    totalPages = res.total_pages;\n                  }\n                  console.log(res.results);\n                  const movies = res.results;\n                  if (movies.length === 0) {\n                    headerFormErrorMessage.style.display = 'block';\n                  } else {\n                    headerFormErrorMessage.style.display = 'none';\n\n                    const movies = res.results;\n                    movies.map(element => {\n                      renderCards(element);\n                      console.log('search');\n                    });\n                  }\n\n                  // create movies cards\n                  movies.map(element => {\n                    renderCards(element);\n                  });\n\n                  // Create modal for each link\n                  const heroImagesLink =\n                    document.querySelectorAll('.hero-cards-link');\n                  // console.log(heroImagesLink);\n\n                  heroImagesLink.forEach(link => {\n                    // const linkImage = link.querySelector('.hero-cards-image');\n                    // console.log(linkImage);\n\n                    link.addEventListener('click', ev => {\n                      ev.preventDefault();\n\n                      // console.log(ev.target);\n                      const currentLink = ev.currentTarget;\n                      console.log(currentLink);\n\n                      const linkId = currentLink.getAttribute('id');\n                      modalImage.setAttribute('id', linkId);\n\n                      // Setting state for each link ad/remove watch/queue button\n                      addRemButtons(\n                        'queued',\n                        linkId,\n                        modalAddToQueueBtn,\n                        modalRemFromQueueBtn\n                      );\n\n                      addRemButtons(\n                        'watched',\n                        linkId,\n                        modalAddToWatchBtn,\n                        modalRemFromWatchBtn\n                      );\n\n                      // condition if link has or not url for image\n                      if (currentLink.href === noImageUrl) {\n                        modalImage.setAttribute('src', noImageUrl);\n                      } else {\n                        // add in link necesary attribute from api's\n                        const linkSrc = currentLink.href;\n                        // console.log(linkSrc);\n                        modalImage.setAttribute('src', linkSrc);\n                      }\n\n                      // add in link necesary attributes from api's\n\n                      const linkTitle = currentLink.getAttribute('title');\n                      // console.log(linkTitle);\n                      modalTitle.textContent = linkTitle;\n\n                      const linkVote = currentLink.getAttribute('vote');\n                      // console.log(linkVote);\n                      modalVote.textContent = linkVote;\n\n                      const linkVotes = currentLink.getAttribute('votes');\n                      // console.log(linkVotes);\n                      modalVotes.textContent = linkVotes;\n\n                      const linkPopurarity =\n                        currentLink.getAttribute('popularity');\n                      // console.log(linkPopurarity);\n                      modalPopularity.textContent = linkPopurarity;\n\n                      const linkOrigTitle =\n                        currentLink.getAttribute('original_title');\n                      // console.log(linkOrigTitle);\n                      modalOrigTitle.textContent = linkOrigTitle;\n\n                      const linkDescription =\n                        currentLink.getAttribute('description');\n                      // console.log(linkDescription);\n                      modalDescription.textContent = linkDescription;\n\n                      const genres = currentLink.getAttribute('genres');\n                      // console.log(genres);\n                      modalGenre.textContent = genres;\n\n                      modalWindow.classList.remove('is-hidden');\n\n                      // setting the modal window gallery using the SimpleLightbox library and adding \"alt\" caption title on bottom with 250 ms delay\n                      // let gallery = new SimpleLightbox(`.gallery a`, {\n                      //   captionsData: 'src',\n                      //   captionDelay: 250,\n                      //   captionPosition: 'outside',\n                      //   alertError: false,\n                      //   captionHTML: false,\n                      // });\n                      // console.dir(gallery);\n                      // console.log(gallery.elements);\n                      // console.log(gallery.options);\n                    });\n                  });\n                })\n                .catch(err => console.error('error:' + err));\n            });\n          })\n          .catch(err => console.error('error:' + err));\n      } else {\n        headerFormErrorMessage.style.display = 'none';\n\n        const movies = res.results;\n        movies.map(element => {\n          renderCards(element);\n          console.log('search');\n        });\n\n        // Create modal for each link\n        const heroImagesLink = document.querySelectorAll('.hero-cards-link');\n        // console.log(heroImagesLink);\n\n        heroImagesLink.forEach(link => {\n          // const linkImage = link.querySelector('.hero-cards-image');\n          // console.log(linkImage);\n\n          link.addEventListener('click', ev => {\n            ev.preventDefault();\n\n            // console.log(ev.target);\n            const currentLink = ev.currentTarget;\n            console.log(currentLink);\n\n            const linkId = currentLink.getAttribute('id');\n            modalImage.setAttribute('id', linkId);\n\n            // Setting state for each link ad/remove watch/queue button\n            addRemButtons(\n              'queued',\n              linkId,\n              modalAddToQueueBtn,\n              modalRemFromQueueBtn\n            );\n\n            addRemButtons(\n              'watched',\n              linkId,\n              modalAddToWatchBtn,\n              modalRemFromWatchBtn\n            );\n\n            // condition if link has or not url for image\n            if (currentLink.href === noImageUrl) {\n              modalImage.setAttribute('src', noImageUrl);\n            } else {\n              // add in link necesary attribute from api's\n              const linkSrc = currentLink.href;\n              // console.log(linkSrc);\n              modalImage.setAttribute('src', linkSrc);\n            }\n\n            // add in link necesary attributes from api's\n\n            const linkTitle = currentLink.getAttribute('title');\n            // console.log(linkTitle);\n            modalTitle.textContent = linkTitle;\n\n            const linkVote = currentLink.getAttribute('vote');\n            // console.log(linkVote);\n            modalVote.textContent = linkVote;\n\n            const linkVotes = currentLink.getAttribute('votes');\n            // console.log(linkVotes);\n            modalVotes.textContent = linkVotes;\n\n            const linkPopurarity = currentLink.getAttribute('popularity');\n            // console.log(linkPopurarity);\n            modalPopularity.textContent = linkPopurarity;\n\n            const linkOrigTitle = currentLink.getAttribute('original_title');\n            // console.log(linkOrigTitle);\n            modalOrigTitle.textContent = linkOrigTitle;\n\n            const linkDescription = currentLink.getAttribute('description');\n            // console.log(linkDescription);\n            modalDescription.textContent = linkDescription;\n\n            const genres = currentLink.getAttribute('genres');\n            // console.log(genres);\n            modalGenre.textContent = genres;\n\n            modalWindow.classList.remove('is-hidden');\n\n            // setting the modal window gallery using the SimpleLightbox library and adding \"alt\" caption title on bottom with 250 ms delay\n            // let gallery = new SimpleLightbox(`.gallery a`, {\n            //   captionsData: 'src',\n            //   captionDelay: 250,\n            //   captionPosition: 'outside',\n            //   alertError: false,\n            //   captionHTML: false,\n            // });\n            // console.dir(gallery);\n            // console.log(gallery.elements);\n            // console.log(gallery.options);\n          });\n        });\n\n        currentPage = 1;\n\n        paginationContainer.addEventListener('click', ev => {\n          // console.log(ev.currentTarget);\n          currentPage =\n            ev.currentTarget.querySelector('.active>span').textContent;\n          console.log(currentPage);\n          findUrl = `https://api.themoviedb.org/3/search/movie?query=${searchText}&include_adult=true&language=en-US&page=${currentPage}`;\n\n          heroList.innerHTML = null;\n          console.log(findUrl);\n\n          fetch(findUrl, options)\n            .then(res => res.json())\n            .then(res => {\n              // console.log(findUrl);\n              console.log(res.total_pages);\n\n              if (res.total_pages < 20) {\n                totalPages = res.total_pages;\n              }\n              console.log(res.results);\n              const movies = res.results;\n              if (movies.length === 0) {\n                headerFormErrorMessage.style.display = 'block';\n              } else {\n                headerFormErrorMessage.style.display = 'none';\n\n                const movies = res.results;\n                movies.map(element => {\n                  renderCards(element);\n                  console.log('search');\n                });\n              }\n\n              // create movies cards\n              movies.map(element => {\n                renderCards(element);\n              });\n\n              // Create modal for each link\n              const heroImagesLink =\n                document.querySelectorAll('.hero-cards-link');\n              // console.log(heroImagesLink);\n\n              heroImagesLink.forEach(link => {\n                // const linkImage = link.querySelector('.hero-cards-image');\n                // console.log(linkImage);\n\n                link.addEventListener('click', ev => {\n                  ev.preventDefault();\n\n                  // console.log(ev.target);\n                  const currentLink = ev.currentTarget;\n                  console.log(currentLink);\n\n                  const linkId = currentLink.getAttribute('id');\n                  modalImage.setAttribute('id', linkId);\n\n                  // Setting state for each link ad/remove watch/queue button\n                  addRemButtons(\n                    'queued',\n                    linkId,\n                    modalAddToQueueBtn,\n                    modalRemFromQueueBtn\n                  );\n\n                  addRemButtons(\n                    'watched',\n                    linkId,\n                    modalAddToWatchBtn,\n                    modalRemFromWatchBtn\n                  );\n\n                  // condition if link has or not url for image\n                  if (currentLink.href === noImageUrl) {\n                    modalImage.setAttribute('src', noImageUrl);\n                  } else {\n                    // add in link necesary attribute from api's\n                    const linkSrc = currentLink.href;\n                    // console.log(linkSrc);\n                    modalImage.setAttribute('src', linkSrc);\n                  }\n\n                  // add in link necesary attributes from api's\n\n                  const linkTitle = currentLink.getAttribute('title');\n                  // console.log(linkTitle);\n                  modalTitle.textContent = linkTitle;\n\n                  const linkVote = currentLink.getAttribute('vote');\n                  // console.log(linkVote);\n                  modalVote.textContent = linkVote;\n\n                  const linkVotes = currentLink.getAttribute('votes');\n                  // console.log(linkVotes);\n                  modalVotes.textContent = linkVotes;\n\n                  const linkPopurarity = currentLink.getAttribute('popularity');\n                  // console.log(linkPopurarity);\n                  modalPopularity.textContent = linkPopurarity;\n\n                  const linkOrigTitle =\n                    currentLink.getAttribute('original_title');\n                  // console.log(linkOrigTitle);\n                  modalOrigTitle.textContent = linkOrigTitle;\n\n                  const linkDescription =\n                    currentLink.getAttribute('description');\n                  // console.log(linkDescription);\n                  modalDescription.textContent = linkDescription;\n\n                  const genres = currentLink.getAttribute('genres');\n                  // console.log(genres);\n                  modalGenre.textContent = genres;\n\n                  modalWindow.classList.remove('is-hidden');\n\n                  // setting the modal window gallery using the SimpleLightbox library and adding \"alt\" caption title on bottom with 250 ms delay\n                  // let gallery = new SimpleLightbox(`.gallery a`, {\n                  //   captionsData: 'src',\n                  //   captionDelay: 250,\n                  //   captionPosition: 'outside',\n                  //   alertError: false,\n                  //   captionHTML: false,\n                  // });\n                  // console.dir(gallery);\n                  // console.log(gallery.elements);\n                  // console.log(gallery.options);\n                });\n              });\n            })\n            .catch(err => console.error('error:' + err));\n        });\n      }\n    })\n    .catch(err => console.error('error:' + err));\n});\n\n// setting state of to watched/queue buttons\nlibraryButton.addEventListener('click', ev => {\n  headerBottomButtonsContainer.classList.toggle('is-hidden');\n});\n\n// remove('current-theme');\n\n// setting state of to dark theme button\ndarkThemeButton.addEventListener('click', ev => {\n  var isChecked = darkThemeButton.checked;\n\n  if (isChecked) {\n    const curentTheme = load('current-theme');\n    if (curentTheme === undefined) {\n      remove('current-theme');\n      toggle.classList.remove('toggle');\n      toggle.classList.add('switched');\n\n      save('current-theme', 'dark');\n      setTheme('dark');\n    }\n    toggle.classList.remove('toggle');\n    toggle.classList.add('switched');\n\n    remove('current-theme');\n    save('current-theme', 'dark');\n    setTheme('dark');\n  }\n  if (!isChecked) {\n    const curentTheme = load('current-theme');\n    if (curentTheme === undefined) {\n      toggle.classList.add('toggle');\n      toggle.classList.remove('switch');\n\n      save('current-theme', 'light');\n      setTheme('light');\n    }\n    toggle.classList.add('toggle');\n    toggle.classList.remove('switch');\n\n    remove('current-theme');\n    save('current-theme', 'light');\n    setTheme('light');\n  }\n});\n\n// let mobileQuerry = window.matchMedia('(max-width: 768px)');\n// let tabletQuerry = window.matchMedia('(min-width: 768px)');\n// let desktopQuerry = window.matchMedia('(min-width: 1024px)');\n\n// setting state of to watched button and getting watched page\nheaderWatchedButton.addEventListener('click', ev => {\n  heroList.innerHTML = '';\n  const moviesIdList = load('watched');\n\n  paginationContainer.style.display = 'none';\n\n  if (moviesIdList === undefined || moviesIdList.length === 0) {\n    let emptyListMessage = document.createElement('p');\n    emptyListMessage.setAttribute('class', 'empty-list');\n    emptyListMessage.textContent = 'Oops ! Your \"Watched\" library is empty !';\n\n    heroList.append(emptyListMessage);\n  } else {\n    console.log(moviesIdList);\n\n    const optionsId = {\n      headers: {\n        Accept: 'application/json',\n      },\n    };\n\n    // let perPage = 4;\n    // page = 1;\n    // totalPages = 1;\n\n    // function createPagination(totalPages, page) {\n    //   let liTag = '';\n    //   let active;\n    //   let beforePage = page - 1;\n    //   let afterPage = page + 1;\n    //   if (page > 1) {\n    //     //show the next button if the page value is greater than 1\n    //     liTag += `<li class=\"btn prev\" onclick=\"createPagination(totalPages, ${\n    //       page - 1\n    //     })\"><span><i class=\"fas fa-angle-left\"></i> Prev</span></li>`;\n    //   }\n\n    //   if (page > 2) {\n    //     //if page value is less than 2 then add 1 after the previous button\n    //     liTag += `<li class=\"first numb\" onclick=\"createPagination(totalPages, 1)\"><span>1</span></li>`;\n    //     if (page > 3) {\n    //       //if page value is greater than 3 then add this (...) after the first li or page\n    //       liTag += `<li class=\"dots\"><span>...</span></li>`;\n    //     }\n    //   }\n\n    //   // how many pages or li show before the current li\n    //   if (page == totalPages) {\n    //     beforePage = beforePage - 2;\n    //   } else if (page == totalPages - 1) {\n    //     beforePage = beforePage - 1;\n    //   }\n    //   // how many pages or li show after the current li\n    //   if (page == 1) {\n    //     afterPage = afterPage + 2;\n    //   } else if (page == 2) {\n    //     afterPage = afterPage + 1;\n    //   }\n\n    //   for (var plength = beforePage; plength <= afterPage; plength++) {\n    //     if (plength > totalPages) {\n    //       //if plength is greater than totalPage length then continue\n    //       continue;\n    //     }\n    //     if (plength == 0) {\n    //       //if plength is 0 than add +1 in plength value\n    //       plength = plength + 1;\n    //     }\n    //     if (page == plength) {\n    //       //if page is equal to plength than assign active string in the active variable\n    //       active = 'active';\n    //     } else {\n    //       //else leave empty to the active variable\n    //       active = '';\n    //     }\n    //     liTag += `<li class=\"numb ${active}\" onclick=\"createPagination(totalPages, ${plength})\"><span>${plength}</span></li>`;\n    //   }\n\n    //   if (page < totalPages - 1) {\n    //     //if page value is less than totalPage value by -1 then show the last li or page\n    //     if (page < totalPages - 2) {\n    //       //if page value is less than totalPage value by -2 then add this (...) before the last li or page\n    //       liTag += `<li class=\"dots\"><span>...</span></li>`;\n    //     }\n    //     liTag += `<li class=\"last numb\" onclick=\"createPagination(totalPages, ${totalPages})\"><span>${totalPages}</span></li>`;\n    //   }\n\n    //   if (page < totalPages) {\n    //     //show the next button if the page value is less than totalPage(20)\n    //     liTag += `<li class=\"btn next\" onclick=\"createPagination(totalPages, ${\n    //       page + 1\n    //     })\"><span>Next <i class=\"fas fa-angle-right\"></i></span></li>`;\n    //   }\n    //   // console.log(page);\n    //   element.innerHTML = liTag; //add li tag inside ul tag\n    //   return liTag; //return the li tag\n    // }\n\n    // totalPages = Math.ceil(moviesIdList.length / perPage);\n    // if (totalPages >= 2) {\n    //   element.style.display = 'block';\n    //   createPagination(totalPages, page);\n    // } else {\n    //   element.style.display = 'none';\n    // }\n\n    // const startIndex = (currentPage - 1) * perPage;\n    // const endIndex = startIndex + perPage;\n    // const pageItems = moviesIdList.slice(startIndex, endIndex);\n\n    // pageItems.forEach(movieId => {\n    //   const urlApi = `https://api.themoviedb.org/3/movie/${movieId}?&api_key=${apiKey}&language=en-US&page=1`;\n\n    //   fetch(urlApi, optionsId)\n    //     .then(res => res.json())\n    //     .then(res => {\n    //       console.log(res);\n    //       const movie = res;\n\n    //       renderWatchQueueCards(movie);\n    //     })\n    //     .catch(err => console.error('error:' + err));\n    // });\n\n    // currentPage = 1;\n\n    // addRemPagination();\n\n    moviesIdList.forEach(movieId => {\n      const urlApi = `https://api.themoviedb.org/3/movie/${movieId}?&api_key=${apiKey}&language=en-US&page=1`;\n\n      fetch(urlApi, optionsId)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res);\n          const movie = res;\n\n          renderWatchQueueCards(movie);\n        })\n        .catch(err => console.error('error:' + err));\n    });\n  }\n\n  // clear watched list\n  headerClearWatchedButton.classList.toggle('is-hidden');\n  headerClearWatchedButton.addEventListener('click', ev => {\n    heroList.innerHTML === null;\n    remove('watched');\n    let emptyListMessage = document.createElement('p');\n    emptyListMessage.setAttribute('class', 'empty-list');\n    emptyListMessage.textContent = 'Oops ! Your \"Watched\" library is empty !';\n\n    heroList.append(emptyListMessage);\n  });\n\n  // hidding clear queued button\n  if (headerClearQueuedButton.classList.contains('is-hidden')) {\n    return;\n  } else {\n    headerClearQueuedButton.classList.toggle('is-hidden');\n  }\n});\n\n// setting state of to queued button and getting watched page\nheaderQueuedButton.addEventListener('click', ev => {\n  heroList.innerHTML = null;\n  const moviesIdList = load('queued');\n  // console.log(moviesIdList);\n  paginationContainer.style.display = 'none';\n\n  if (moviesIdList === undefined || moviesIdList.length === 0) {\n    let emptyListMessage = document.createElement('p');\n    emptyListMessage.setAttribute('class', 'empty-list');\n    emptyListMessage.textContent = 'Oops ! Your \"Queued\" library is empty !';\n\n    heroList.append(emptyListMessage);\n  } else {\n    const optionsId = {\n      headers: {\n        Accept: 'application/json',\n      },\n    };\n\n    // page = 1;\n    // totalPages = 20;\n\n    // function createPagination(totalPages, page) {\n    //   let liTag = '';\n    //   let active;\n    //   let beforePage = page - 1;\n    //   let afterPage = page + 1;\n    //   if (page > 1) {\n    //     //show the next button if the page value is greater than 1\n    //     liTag += `<li class=\"btn prev\" onclick=\"createPagination(totalPages, ${\n    //       page - 1\n    //     })\"><span><i class=\"fas fa-angle-left\"></i> Prev</span></li>`;\n    //   }\n\n    //   if (page > 2) {\n    //     //if page value is less than 2 then add 1 after the previous button\n    //     liTag += `<li class=\"first numb\" onclick=\"createPagination(totalPages, 1)\"><span>1</span></li>`;\n    //     if (page > 3) {\n    //       //if page value is greater than 3 then add this (...) after the first li or page\n    //       liTag += `<li class=\"dots\"><span>...</span></li>`;\n    //     }\n    //   }\n\n    //   // how many pages or li show before the current li\n    //   if (page == totalPages) {\n    //     beforePage = beforePage - 2;\n    //   } else if (page == totalPages - 1) {\n    //     beforePage = beforePage - 1;\n    //   }\n    //   // how many pages or li show after the current li\n    //   if (page == 1) {\n    //     afterPage = afterPage + 2;\n    //   } else if (page == 2) {\n    //     afterPage = afterPage + 1;\n    //   }\n\n    //   for (var plength = beforePage; plength <= afterPage; plength++) {\n    //     if (plength > totalPages) {\n    //       //if plength is greater than totalPage length then continue\n    //       continue;\n    //     }\n    //     if (plength == 0) {\n    //       //if plength is 0 than add +1 in plength value\n    //       plength = plength + 1;\n    //     }\n    //     if (page == plength) {\n    //       //if page is equal to plength than assign active string in the active variable\n    //       active = 'active';\n    //     } else {\n    //       //else leave empty to the active variable\n    //       active = '';\n    //     }\n    //     liTag += `<li class=\"numb ${active}\" onclick=\"createPagination(totalPages, ${plength})\"><span>${plength}</span></li>`;\n    //   }\n\n    //   if (page < totalPages - 1) {\n    //     //if page value is less than totalPage value by -1 then show the last li or page\n    //     if (page < totalPages - 2) {\n    //       //if page value is less than totalPage value by -2 then add this (...) before the last li or page\n    //       liTag += `<li class=\"dots\"><span>...</span></li>`;\n    //     }\n    //     liTag += `<li class=\"last numb\" onclick=\"createPagination(totalPages, ${totalPages})\"><span>${totalPages}</span></li>`;\n    //   }\n\n    //   if (page < totalPages) {\n    //     //show the next button if the page value is less than totalPage(20)\n    //     liTag += `<li class=\"btn next\" onclick=\"createPagination(totalPages, ${\n    //       page + 1\n    //     })\"><span>Next <i class=\"fas fa-angle-right\"></i></span></li>`;\n    //   }\n    //   // console.log(page);\n    //   element.innerHTML = liTag; //add li tag inside ul tag\n    //   return liTag; //return the li tag\n    // }\n\n    // let perPage = 4;\n\n    // totalPages = Math.ceil(moviesIdList.length / perPage);\n    // if (totalPages >= 2) {\n    //   element.style.display = 'block';\n    //   createPagination(totalPages, page);\n    // } else {\n    //   element.style.display = 'none';\n    // }\n\n    // const startIndex = (currentPage - 1) * perPage;\n    // const endIndex = startIndex + perPage;\n    // const pageItems = moviesIdList.slice(startIndex, endIndex);\n\n    // currentPage = 1;\n\n    // addRemPagination();\n\n    // pageItems.forEach(movieId => {\n    //   const urlApi = `https://api.themoviedb.org/3/movie/${movieId}?&api_key=${apiKey}&language=en-US&page=1`;\n\n    //   fetch(urlApi, optionsId)\n    //     .then(res => res.json())\n    //     .then(res => {\n    //       console.log(res);\n    //       const movie = res;\n\n    //       renderWatchQueueCards(movie);\n    //     })\n    //     .catch(err => console.error('error:' + err));\n    // });\n\n    moviesIdList.forEach(movieId => {\n      const urlApi = `https://api.themoviedb.org/3/movie/${movieId}?&api_key=${apiKey}&language=en-US&page=1`;\n\n      fetch(urlApi, optionsId)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res);\n          const movie = res;\n\n          renderWatchQueueCards(movie);\n        })\n        .catch(err => console.error('error:' + err));\n    });\n  }\n\n  // clear queued list\n  headerClearQueuedButton.classList.toggle('is-hidden');\n  headerClearQueuedButton.addEventListener('click', ev => {\n    heroList.innerHTML = null;\n    remove('queued');\n    let emptyListMessage = document.createElement('p');\n    emptyListMessage.setAttribute('class', 'empty-list');\n    emptyListMessage.textContent = 'Oops ! Your \"Queued\" library is empty !';\n\n    heroList.append(emptyListMessage);\n  });\n\n  // hidding clear watched button\n  if (headerClearWatchedButton.classList.contains('is-hidden')) {\n    return;\n  } else {\n    headerClearWatchedButton.classList.toggle('is-hidden');\n  }\n});\n\n// HERO\n\nfetch(trendingMoviesUrl, options)\n  .then(res => res.json())\n  .then(res => {\n    heroList.innerHTML = null;\n    // console.log(res);\n    console.log(res.results);\n    const movies = res.results;\n\n    paginationContainer.style.display = 'block';\n\n    movies.map(element => {\n      renderCards(element);\n    });\n\n    currentPage = 1;\n\n    heroPagination();\n\n    const heroImagesLink = document.querySelectorAll('.hero-cards-link');\n    // console.log(heroImagesLink);\n\n    heroImagesLink.forEach(link => {\n      // const linkImage = link.querySelector('.hero-cards-image');\n      // console.log(linkImage);\n\n      link.addEventListener('click', ev => {\n        ev.preventDefault();\n\n        // console.log(ev.target);\n        const currentLink = ev.currentTarget;\n        // console.log(currentLink);\n\n        const linkSrc = currentLink.href;\n        // console.log(linkSrc);\n        modalImage.setAttribute('src', linkSrc);\n\n        const linkId = currentLink.getAttribute('id');\n        modalImage.setAttribute('id', linkId);\n\n        addRemButtons(\n          'queued',\n          linkId,\n          modalAddToQueueBtn,\n          modalRemFromQueueBtn\n        );\n\n        addRemButtons(\n          'watched',\n          linkId,\n          modalAddToWatchBtn,\n          modalRemFromWatchBtn\n        );\n\n        const linkTitle = currentLink.getAttribute('title');\n        // console.log(linkTitle);\n        modalTitle.textContent = linkTitle;\n\n        const linkVote = currentLink.getAttribute('vote');\n        // console.log(linkVote);\n        modalVote.textContent = linkVote;\n\n        const linkVotes = currentLink.getAttribute('votes');\n        // console.log(linkVotes);\n        modalVotes.textContent = linkVotes;\n\n        const linkPopurarity = currentLink.getAttribute('popularity');\n        // console.log(linkPopurarity);\n        modalPopularity.textContent = linkPopurarity;\n\n        const linkOrigTitle = currentLink.getAttribute('original_title');\n        // console.log(linkOrigTitle);\n        modalOrigTitle.textContent = linkOrigTitle;\n\n        const linkDescription = currentLink.getAttribute('description');\n        // console.log(linkDescription);\n        modalDescription.textContent = linkDescription;\n\n        const genres = currentLink.getAttribute('genres');\n        // console.log(genres);\n        modalGenre.textContent = genres;\n\n        modalWindow.classList.toggle('is-hidden');\n      });\n    });\n  })\n  .catch(err => console.error('error:' + err));\n\nfunction renderCards(params) {\n  const heroCardListItem = document.createElement('div');\n  heroCardListItem.setAttribute('class', 'movie-card item');\n  heroCardListItem.setAttribute('data-movie-id', `${params.id}`);\n  heroList.append(heroCardListItem);\n\n  const heroLink = document.createElement('a');\n  if (params.backdrop_path === null) {\n    heroLink.setAttribute(\n      'href',\n      'https://lascrucesfilmfest.com/wp-content/uploads/2018/01/no-poster-available.jpg'\n    );\n  } else {\n    heroLink.setAttribute(\n      'href',\n      `https://image.tmdb.org/t/p/original/${params.poster_path}`\n    );\n  }\n\n  const genresArr = params.genre_ids;\n  // console.log(genresArr.length);\n  let genres = [];\n\n  genresArr.forEach(element => {\n    fetch(genresApiUrl, options)\n      .then(res => res.json())\n      .then(res => {\n        res.genres.map(x => {\n          if (x.id === element) {\n            genres.push(x.name);\n            if (genres.length <= 3) {\n              heroLink.setAttribute('genres', genres);\n            } else {\n              let redGenres = genres.slice(0, 2);\n              heroLink.setAttribute('genres', `${redGenres},Other`);\n            }\n          }\n        });\n      })\n      .catch(err => console.error('error:' + err));\n  });\n\n  // heroLink.setAttribute('genres', genres);\n\n  heroLink.setAttribute('class', `hero-cards-link`);\n  heroLink.setAttribute('title', `${params.title}`);\n  heroLink.setAttribute('vote', `${params.vote_average}`);\n  heroLink.setAttribute('votes', `${params.vote_count}`);\n  heroLink.setAttribute('popularity', `${params.popularity}`);\n  heroLink.setAttribute('original_title', `${params.original_title}`);\n  heroLink.setAttribute('description', `${params.overview}`);\n  heroLink.setAttribute('id', params.id);\n\n  heroCardListItem.append(heroLink);\n\n  const img = document.createElement('img');\n  if (params.backdrop_path === null) {\n    img.setAttribute(\n      'src',\n      'https://lascrucesfilmfest.com/wp-content/uploads/2018/01/no-poster-available.jpg'\n    );\n  } else {\n    img.setAttribute(\n      'src',\n      `https://image.tmdb.org/t/p/original/${params.backdrop_path}`\n    );\n  }\n  img.setAttribute('class', `hero-cards-image`);\n  img.setAttribute('alt', `${params.media_type}`);\n  img.setAttribute('loading', `lazy`);\n  img.setAttribute('id', params.id);\n\n  // console.log(img);\n\n  heroLink.append(img);\n\n  const heroCardDetails = document.createElement('div');\n  heroCardDetails.setAttribute('class', 'hero-movie-details-container');\n  heroCardDetails.setAttribute('data-movie-id', `${params.id}`);\n\n  heroCardListItem.append(heroCardDetails);\n\n  const heroMovieTitle = document.createElement('h3');\n  heroMovieTitle.setAttribute('class', 'hero-movie-title');\n  heroMovieTitle.textContent = `${params.title}`;\n\n  heroCardDetails.append(heroMovieTitle);\n\n  const heroMovieGenresList = document.createElement('ul');\n  heroMovieGenresList.setAttribute('class', 'hero-movie-genres-list');\n\n  let movieGenres = params.genre_ids;\n  // console.log(movieGenres);\n\n  if (movieGenres.length > 3) {\n    // console.log(movieGenres.length);\n    movieGenres = movieGenres.slice(0, 2);\n    // console.log(movieGenres);\n\n    movieGenres.forEach(element => {\n      // console.log(element);\n      const heroMovieGenresListItem = document.createElement('li');\n      heroMovieGenresListItem.setAttribute(\n        'class',\n        'hero-movie-genres-list-item'\n      );\n\n      fetch(genresApiUrl, options)\n        .then(res => res.json())\n        .then(res => {\n          res.genres.map(x => {\n            if (x.id === element) {\n              heroMovieGenresListItem.textContent = `${x.name},`;\n            }\n          });\n        })\n        .catch(err => console.error('error:' + err));\n\n      heroMovieGenresList.append(heroMovieGenresListItem);\n    });\n\n    const heroGenresOther = document.createElement('li');\n    heroGenresOther.setAttribute('class', 'hero-movie-genres-list-item');\n    heroGenresOther.textContent = 'Otherr';\n    heroMovieGenresList.append(heroGenresOther);\n  } else {\n    if (movieGenres.length === 0) {\n      const heroGenresOther = document.createElement('li');\n      heroGenresOther.setAttribute('class', 'hero-movie-genres-list-item');\n      heroGenresOther.textContent = 'Otherr';\n      heroMovieGenresList.append(heroGenresOther);\n    } else {\n      movieGenres.forEach(element => {\n        // console.log(element);\n        const heroMovieGenresListItem = document.createElement('li');\n        heroMovieGenresListItem.setAttribute(\n          'class',\n          'hero-movie-genres-list-item'\n        );\n\n        fetch(genresApiUrl, options)\n          .then(res => res.json())\n          .then(res => {\n            res.genres.map(x => {\n              if (x.id === element) {\n                heroMovieGenresListItem.textContent = `${x.name},`;\n              }\n            });\n          })\n          .catch(err => console.error('error:' + err));\n\n        heroMovieGenresList.append(heroMovieGenresListItem);\n      });\n    }\n  }\n\n  setTimeout(heroCommaRemove, 2000);\n\n  function heroCommaRemove() {\n    let heroLastItem = heroMovieGenresList.lastChild;\n    // console.log(heroLastItem);\n    // console.log(heroLastItem.textContent);\n\n    let heroLastChild = heroLastItem.textContent;\n\n    heroLastItem.textContent = heroLastChild.slice(0, -1);\n  }\n\n  const date = params.release_date;\n  const year = date.slice(0, 4);\n  const yearCard = document.createElement('span');\n  yearCard.setAttribute('class', 'hero-year-span');\n  yearCard.textContent = `| ` + year;\n  // heroCardDetails.append(yearCard);\n\n  // console.log(params.vote_count);\n  const votes = document.createElement('span');\n  votes.setAttribute('class', 'hero-votes-span');\n  votes.textContent = params.vote_average;\n  // heroCardDetails.append(votes);\n\n  const heroMovieDetailsContainer = document.createElement('div');\n  heroMovieDetailsContainer.setAttribute('class', 'hero-details-container');\n  heroCardDetails.append(heroMovieDetailsContainer);\n  heroMovieDetailsContainer.append(heroMovieGenresList, yearCard, votes);\n}\n\nfunction renderWatchQueueCards(params) {\n  const heroCardListItem = document.createElement('div');\n  heroCardListItem.setAttribute('class', 'movie-card item');\n  heroCardListItem.setAttribute('data-movie-id', `${params.id}`);\n  heroList.append(heroCardListItem);\n\n  const heroLink = document.createElement('a');\n  if (params.backdrop_path === null) {\n    heroLink.setAttribute(\n      'href',\n      'https://lascrucesfilmfest.com/wp-content/uploads/2018/01/no-poster-available.jpg'\n    );\n  } else {\n    heroLink.setAttribute(\n      'href',\n      `https://image.tmdb.org/t/p/original/${params.poster_path}`\n    );\n  }\n\n  const genresName = params.genres;\n  // console.log(genresName);\n  const genresNameLength = genresName.length;\n  let genres = [];\n\n  if (genresNameLength <= 2) {\n    genresName.map(genre => {\n      genres.push(genre.name);\n      heroLink.setAttribute('genres', genres);\n    });\n  } else {\n    genres.push(genresName[0].name, genresName[1].name, 'Other');\n    heroLink.setAttribute('genres', genres);\n  }\n\n  heroLink.setAttribute('class', `hero-cards-link`);\n  heroLink.setAttribute('title', `${params.title}`);\n  heroLink.setAttribute('vote', `${params.vote_average}`);\n  heroLink.setAttribute('votes', `${params.vote_count}`);\n  heroLink.setAttribute('popularity', `${params.popularity}`);\n  heroLink.setAttribute('original_title', `${params.original_title}`);\n  heroLink.setAttribute('description', `${params.overview}`);\n  heroLink.setAttribute('id', params.id);\n\n  heroCardListItem.append(heroLink);\n\n  const img = document.createElement('img');\n  if (params.backdrop_path === null) {\n    img.setAttribute(\n      'src',\n      'https://lascrucesfilmfest.com/wp-content/uploads/2018/01/no-poster-available.jpg'\n    );\n  } else {\n    img.setAttribute(\n      'src',\n      `https://image.tmdb.org/t/p/original/${params.backdrop_path}`\n    );\n  }\n  img.setAttribute('class', `hero-cards-image`);\n  img.setAttribute('alt', `${params.media_type}`);\n  img.setAttribute('loading', `lazy`);\n  img.setAttribute('id', params.id);\n\n  // console.log(img);\n\n  heroLink.append(img);\n\n  const heroCardDetails = document.createElement('div');\n  heroCardDetails.setAttribute('class', 'hero-movie-details-container');\n  heroCardDetails.setAttribute('data-movie-id', `${params.id}`);\n\n  heroCardListItem.append(heroCardDetails);\n\n  const heroMovieTitle = document.createElement('h3');\n  heroMovieTitle.setAttribute('class', 'hero-movie-title');\n  heroMovieTitle.textContent = `${params.title}`;\n\n  heroCardDetails.append(heroMovieTitle);\n\n  const heroMovieGenresList = document.createElement('ul');\n  heroMovieGenresList.setAttribute('class', 'hero-movie-genres-list');\n\n  let movieGenres = heroLink.getAttribute('genres');\n  // console.log(movieGenres);\n\n  const heroMovieGenresListItem = document.createElement('li');\n  heroMovieGenresListItem.setAttribute('class', 'hero-movie-genres-list-item');\n\n  heroMovieGenresListItem.textContent = movieGenres;\n\n  heroMovieGenresList.append(heroMovieGenresListItem);\n\n  const date = params.release_date;\n  const year = date.slice(0, 4);\n  const yearCard = document.createElement('span');\n  yearCard.setAttribute('class', 'hero-year-span');\n  yearCard.textContent = `| ` + year;\n  // heroCardDetails.append(yearCard);\n\n  // console.log(params.vote_count);\n  const votes = document.createElement('span');\n  votes.setAttribute('class', 'hero-votes-span');\n  votes.textContent = params.vote_average;\n  // heroCardDetails.append(votes);\n\n  const heroMovieDetailsContainer = document.createElement('div');\n  heroMovieDetailsContainer.setAttribute('class', 'hero-details-container');\n  heroCardDetails.append(heroMovieDetailsContainer);\n  heroMovieDetailsContainer.append(heroMovieGenresList, yearCard, votes);\n\n  function link() {\n    // console.log(heroLink);\n\n    heroLink.addEventListener('click', ev => {\n      ev.preventDefault();\n\n      console.log(ev.target);\n      const currentLink = ev.currentTarget;\n      console.log(currentLink);\n\n      const linkSrc = currentLink.href;\n      // console.log(linkSrc);\n      modalImage.setAttribute('src', linkSrc);\n\n      const linkId = currentLink.getAttribute('id');\n      modalImage.setAttribute('id', linkId);\n\n      addRemButtons('queued', linkId, modalAddToQueueBtn, modalRemFromQueueBtn);\n\n      addRemButtons(\n        'watched',\n        linkId,\n        modalAddToWatchBtn,\n        modalRemFromWatchBtn\n      );\n\n      const linkTitle = currentLink.getAttribute('title');\n      // console.log(linkTitle);\n      modalTitle.textContent = linkTitle;\n\n      const linkVote = currentLink.getAttribute('vote');\n      // console.log(linkVote);\n      modalVote.textContent = linkVote;\n\n      const linkVotes = currentLink.getAttribute('votes');\n      // console.log(linkVotes);\n      modalVotes.textContent = linkVotes;\n\n      const linkPopurarity = currentLink.getAttribute('popularity');\n      // console.log(linkPopurarity);\n      modalPopularity.textContent = linkPopurarity;\n\n      const linkOrigTitle = currentLink.getAttribute('original_title');\n      // console.log(linkOrigTitle);\n      modalOrigTitle.textContent = linkOrigTitle;\n\n      const linkDescription = currentLink.getAttribute('description');\n      // console.log(linkDescription);\n      modalDescription.textContent = linkDescription;\n\n      const genres = currentLink.getAttribute('genres');\n      // console.log(genres);\n      modalGenre.textContent = genres;\n\n      modalWindow.classList.toggle('is-hidden');\n    });\n  }\n\n  link();\n}\n\n// PAGE-CHANGER\n\nfunction heroPagination() {\n  paginationContainer.addEventListener('click', ev => {\n    // console.log(ev.currentTarget);\n    currentPage = ev.currentTarget.querySelector('.active>span').textContent;\n    // console.log(currentPage);\n    let trendingMoviesUrl = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&page=${currentPage}`;\n\n    heroList.innerHTML = null;\n    // console.log(trendingMoviesUrl);\n\n    fetch(trendingMoviesUrl, options)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        // console.log(res.total_pages);\n        if (res.total_pages < 20) {\n          totalPages = res.total_pages;\n        }\n\n        const movies = res.results;\n        movies.map(element => {\n          renderCards(element);\n        });\n\n        const heroImagesLink = document.querySelectorAll('.hero-cards-link');\n        // console.log(heroImagesLink);\n\n        heroImagesLink.forEach(link => {\n          // const linkImage = link.querySelector('.hero-cards-image');\n          // console.log(linkImage);\n\n          link.addEventListener('click', ev => {\n            ev.preventDefault();\n\n            // console.log(ev.target);\n            const currentLink = ev.currentTarget;\n            // console.log(currentLink);\n\n            const linkSrc = currentLink.href;\n            // console.log(linkSrc);\n            modalImage.setAttribute('src', linkSrc);\n\n            const linkId = currentLink.getAttribute('id');\n            modalImage.setAttribute('id', linkId);\n\n            addRemButtons(\n              'queued',\n              linkId,\n              modalAddToQueueBtn,\n              modalRemFromQueueBtn\n            );\n\n            addRemButtons(\n              'watched',\n              linkId,\n              modalAddToWatchBtn,\n              modalRemFromWatchBtn\n            );\n\n            const linkTitle = currentLink.getAttribute('title');\n            // console.log(linkTitle);\n            modalTitle.textContent = linkTitle;\n\n            const linkVote = currentLink.getAttribute('vote');\n            // console.log(linkVote);\n            modalVote.textContent = linkVote;\n\n            const linkVotes = currentLink.getAttribute('votes');\n            // console.log(linkVotes);\n            modalVotes.textContent = linkVotes;\n\n            const linkPopurarity = currentLink.getAttribute('popularity');\n            // console.log(linkPopurarity);\n            modalPopularity.textContent = linkPopurarity;\n\n            const linkOrigTitle = currentLink.getAttribute('original_title');\n            // console.log(linkOrigTitle);\n            modalOrigTitle.textContent = linkOrigTitle;\n\n            const linkDescription = currentLink.getAttribute('description');\n            // console.log(linkDescription);\n            modalDescription.textContent = linkDescription;\n\n            const genres = currentLink.getAttribute('genres');\n            // console.log(genres);\n            modalGenre.textContent = genres;\n\n            modalWindow.classList.toggle('is-hidden');\n          });\n        });\n      })\n      .catch(err => console.error('error:' + err));\n  });\n}\n\nfunction addRemPagination() {\n  paginationContainer.addEventListener('click', ev => {\n    totalPages = Math.ceil(moviesIdList.length / perPage);\n    console.log(totalPages);\n\n    // console.log(ev.currentTarget);\n    currentPage = ev.currentTarget.querySelector('.active>span').textContent;\n\n    pageItems.forEach(movieId => {\n      const urlApi = `https://api.themoviedb.org/3/movie/${movieId}?&api_key=${apiKey}&language=en-US&page=1`;\n\n      const optionsId = {\n        headers: {\n          Accept: 'application/json',\n        },\n      };\n\n      fetch(urlApi, optionsId)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res);\n          const movie = res;\n\n          renderWatchQueueCards(movie);\n        })\n        .catch(err => console.error('error:' + err));\n    });\n  });\n}\n\n// PAGE-UP\nconst pageUp = document.querySelector('.page-up');\n// When the user scrolls down 20px from the top of the document, show the button\nwindow.onscroll = function () {\n  scrollFunction();\n};\nfunction scrollFunction() {\n  if (document.documentElement.scrollTop > 700) {\n    // console.log(document.body.scrollTop);\n    // console.log(document.documentElement.scrollTop);\n    // console.log(document.documentElement);\n    pageUp.style.display = 'flex';\n  } else {\n    pageUp.style.display = 'none';\n  }\n}\n\n// When the user clicks on the button, scroll to the top of the document\npageUp.addEventListener('click', () => {\n  document.documentElement.scrollTop = 0;\n});\n\n// FOOTER\n// FOOTER MODAL\nconst footerOpenButton = document.querySelector('.footer-modal-button');\n// console.log(footerOpenButton);\n\nconst footerCloseButton = document.querySelector('.footer-modal-close-button');\n// console.log(footerCloseButton);\n\nconst footerModal = document.querySelector('.footer-modal');\nfooterModal.style.display = 'none';\n// console.log(footerModal);\n\nfooterOpenButton.addEventListener('click', () => {\n  footerModal.style.display = 'flex';\n});\n\nfooterCloseButton.addEventListener('click', () => {\n  footerModal.style.display = 'none';\n});\n\nwindow.addEventListener('click', e => {\n  if (e.target == footerModal) {\n    footerModal.style.display = 'none';\n  }\n});\n\nwindow.addEventListener('keyup', event => {\n  if (event.key === 'Escape') {\n    footerModal.style.display = 'none';\n  }\n});\n"],"names":["globalObject","self","window","$parcel$global","Error","getGlobal","module","exports","fetch","default","bind","Headers","Request","Response","$6fIKZ","parcelRequire","addEventListener","event","key","$1f0dc3b9307be026$var$modalWindow","classList","contains","add","$1f0dc3b9307be026$var$save","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$1f0dc3b9307be026$var$load","getItem","undefined","parse","$1f0dc3b9307be026$var$remove","removeItem","$1f0dc3b9307be026$var$setTheme","theme","document","documentElement","style","setProperty","$1f0dc3b9307be026$var$toggle","querySelector","getAttribute","$1f0dc3b9307be026$var$darkThemeButton","$1f0dc3b9307be026$var$issChecked","checked","$1f0dc3b9307be026$var$curentTheme","includes","remove","log","body","$1f0dc3b9307be026$var$libraryButton","$1f0dc3b9307be026$var$headerBottomButtonsContainer","$1f0dc3b9307be026$var$headerWatchedButton","$1f0dc3b9307be026$var$headerClearWatchedButton","$1f0dc3b9307be026$var$headerQueuedButton","$1f0dc3b9307be026$var$headerClearQueuedButton","$1f0dc3b9307be026$var$headerInput","$1f0dc3b9307be026$var$searchText","$1f0dc3b9307be026$var$headerSearchBtn","$1f0dc3b9307be026$var$headerFormErrorMessage","$1f0dc3b9307be026$var$heroList","$1f0dc3b9307be026$var$noImageUrl","$1f0dc3b9307be026$var$trendingMoviesUrl","currentPage","$1f0dc3b9307be026$var$genresApiUrl","$1f0dc3b9307be026$var$options","method","headers","accept","Authorization","$1f0dc3b9307be026$var$modalImage","$1f0dc3b9307be026$var$modalTitle","$1f0dc3b9307be026$var$modalVote","$1f0dc3b9307be026$var$modalVotes","$1f0dc3b9307be026$var$modalPopularity","$1f0dc3b9307be026$var$modalOrigTitle","$1f0dc3b9307be026$var$modalGenre","$1f0dc3b9307be026$var$modalDescription","$1f0dc3b9307be026$var$isHidden","params","$1f0dc3b9307be026$var$remHidden","$1f0dc3b9307be026$var$addRemButtons","id","addBtn","remBtn","status","toggle","$1f0dc3b9307be026$var$modalAddToWatchBtn","$1f0dc3b9307be026$var$modalRemFromWatchBtn","ev","watched","length","push","watchedd","filter","x","$1f0dc3b9307be026$var$modalAddToQueueBtn","$1f0dc3b9307be026$var$modalRemFromQueueBtn","$1f0dc3b9307be026$var$renderCards","heroCardListItem","createElement","setAttribute","append","heroLink","backdrop_path","poster_path","genresArr","genre_ids","genres","forEach","element","then","res","json","map","name","redGenres","slice","catch","err","title","vote_average","vote_count","popularity","original_title","overview","img","media_type","heroCardDetails","heroMovieTitle","textContent","heroMovieGenresList","movieGenres","heroMovieGenresListItem","heroGenresOther","setTimeout","heroLastItem","lastChild","heroLastChild","year","release_date","yearCard","votes","heroMovieDetailsContainer","$1f0dc3b9307be026$var$renderWatchQueueCards","genresName","genresNameLength","genres1","genre","preventDefault","target","currentLink","currentTarget","linkSrc","href","linkId","linkTitle","linkVote","linkVotes","linkPopurarity","linkOrigTitle","linkDescription","queued","queuedd","ev1","paginationContainer","display","disabled","replace","findUrl","innerHTML","res1","results","res2","querySelectorAll","link","ev2","total_pages","totalPages","movies","ev3","isChecked","moviesIdList","emptyListMessage","optionsId","Accept","movieId","ev4","trendingMoviesUrl1","$1f0dc3b9307be026$var$pageUp","onscroll","scrollTop","$1f0dc3b9307be026$var$footerOpenButton","$1f0dc3b9307be026$var$footerCloseButton","$1f0dc3b9307be026$var$footerModal","e"],"version":3,"file":"index.4308b27c.js.map"}